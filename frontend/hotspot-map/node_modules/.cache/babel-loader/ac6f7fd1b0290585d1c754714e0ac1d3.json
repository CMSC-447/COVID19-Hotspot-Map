{"ast":null,"code":"var _jsxFileName = \"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx\";\nimport React, { Component } from 'react';\nimport { Markers, MapContainer, GeoJSON, TileLayer } from \"react-leaflet\";\nimport county_ca from './../data/county_ca.json'; //import markers from './../data/markers.json'\n\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markers\n    };\n\n    this.getColor = n => {\n      if (n > 2) {\n        return \"red\";\n      } else {\n        return \"blue\";\n      }\n    };\n\n    this.countyStyle = {\n      fillColor: \"blue\",\n      fillOpacity: .6,\n      color: \"black\"\n    };\n\n    this.onEachCounty = (county, layer) => {\n      const countyName = county.properties.NAME;\n      layer.bindPopup(`${countyName}`);\n\n      if (county.properties.COUNTYFP > 34) {\n        layer.options.fillColor = \"green\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(county_ca);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"80vh\",\n          width: '80%',\n          margin: 'auto'\n        },\n        zoom: 6,\n        center: [38, -122],\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countyStyle,\n          data: county_ca.features,\n          onEachFeature: this.onEachCounty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), this.markers.map((position, idx) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [],\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Hi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, $p_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx"],"names":["React","Component","Markers","MapContainer","GeoJSON","TileLayer","county_ca","MyMap","state","markers","getColor","n","countyStyle","fillColor","fillOpacity","color","onEachCounty","county","layer","countyName","properties","NAME","bindPopup","COUNTYFP","options","componentDidMount","console","log","render","height","width","margin","features","map","position","idx","$p_name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,EAAiBC,YAAjB,EAA+BC,OAA/B,EAAwCC,SAAxC,QAAwD,eAAxD;AACA,OAAOC,SAAP,MAAsB,0BAAtB,C,CACA;;AACA,OAAO,0BAAP;;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACJC,MAAAA;AADI,KADkB;;AAAA,SAS1BC,QAT0B,GASdC,CAAD,IAAO;AACd,UAAGA,CAAC,GAAG,CAAP,EAAS;AACL,eAAO,KAAP;AACH,OAFD,MAGI;AACA,eAAO,MAAP;AACH;AAEJ,KAjByB;;AAAA,SAmB1BC,WAnB0B,GAmBZ;AACVC,MAAAA,SAAS,EAAE,MADD;AAEVC,MAAAA,WAAW,EAAE,EAFH;AAGVC,MAAAA,KAAK,EAAE;AAHG,KAnBY;;AAAA,SA0B1BC,YA1B0B,GA0BX,CAACC,MAAD,EAASC,KAAT,KAAkB;AAC7B,YAAMC,UAAU,GAAGF,MAAM,CAACG,UAAP,CAAkBC,IAArC;AACAH,MAAAA,KAAK,CAACI,SAAN,CAAiB,GAAEH,UAAW,EAA9B;;AAEA,UAAGF,MAAM,CAACG,UAAP,CAAkBG,QAAlB,GAA6B,EAAhC,EAAmC;AAC/BL,QAAAA,KAAK,CAACM,OAAN,CAAcX,SAAd,GAA0B,OAA1B;AACH;AAGJ,KAnCyB;AAAA;;AAK1BY,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACH;;AA8BDsB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,KAAK,EAAI;AAACC,UAAAA,MAAM,EAAE,MAAT;AAAiBC,UAAAA,KAAK,EAAE,KAAxB;AAA+BC,UAAAA,MAAM,EAAE;AAAvC,SAAvB;AAAuE,QAAA,IAAI,EAAI,CAA/E;AAAkF,QAAA,MAAM,EAAI,CAAC,EAAD,EAAK,CAAC,GAAN,CAA5F;AAAwG,QAAA,eAAe,EAAI,KAA3H;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,KAAK,EAAI,KAAKnB,WAAvB;AAAoC,UAAA,IAAI,EAAGN,SAAS,CAAC0B,QAArD;AAA+D,UAAA,aAAa,EAAE,KAAKhB;AAAnF;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AACC,UAAA,WAAW,EAAC,0EADb;AAEC,UAAA,GAAG,EAAC;AAFL;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOC,KAAKP,OAAL,CAAawB,GAAb,CAAiB,CAACC,QAAD,EAAWC,GAAX,kBACd,QAAC,MAAD;AAAsB,UAAA,QAAQ,EAAE,EAAhC;AAAA,iCACA,QAAC,KAAD;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,WAAaC,OAAb;AAAA;AAAA;AAAA;AAAA,gBADH,CAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA1DyB;;AA6D9B,eAAe7B,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport {Markers, MapContainer, GeoJSON, TileLayer} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\n//import markers from './../data/markers.json'\nimport \"leaflet/dist/leaflet.css\";\n\nclass MyMap extends Component {\n    state = { \n        markers\n    };\n\n    componentDidMount(){\n        console.log(county_ca);\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        const countyName = county.properties.NAME;\n        layer.bindPopup(`${countyName}`)\n         \n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"green\"\n        }\n\n\n    };\n\n    render() {\n        return ( \n            <div>\n                <MapContainer style = {{height: \"80vh\", width: '80%', margin: 'auto'}} zoom = {6} center = {[38, -122]} scrollWheelZoom = {false}>\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty}/>\n                    <TileLayer\n                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                     />\n\n                {this.markers.map((position, idx) => \n                    <Marker key={$p_name} position={[]}>\n                    <Popup>\n                        <span>Hi</span>\n                    </Popup>\n                    </Marker>\n                    )}\n\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default MyMap"]},"metadata":{},"sourceType":"module"}