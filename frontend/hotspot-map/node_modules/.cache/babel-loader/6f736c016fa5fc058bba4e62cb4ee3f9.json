{"ast":null,"code":"var _jsxFileName = \"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx\";\nimport React, { Component } from 'react';\nimport { Marker, MapContainer, GeoJSON, TileLayer, Popup } from \"react-leaflet\";\nimport county_ca from './../data/county_ca.json';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet'; //import markers from './../data/markers.json'\n// delete L.Icon.Default.prototype._getIconUrl;\n// const marker_icon = new L.Icon({\n//     iconUrl:require('./marker.svg'),\n//     iconSize:[20,20]\n// });\n\nimport icon from './marker.png';\nimport iconShadow from './marker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconSize: [12, 10]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markers: [[35.9705041, -120.1211248]]\n    };\n\n    this.addMarker = e => {\n      const {\n        markers\n      } = this.state;\n      markers.pop();\n      markers.push(e.latlng);\n      this.setState({\n        markers\n      });\n    };\n\n    this.getColor = n => {\n      if (n > 2) {\n        return \"red\";\n      } else {\n        return \"blue\";\n      }\n    };\n\n    this.countyStyle = {\n      fillColor: \"blue\",\n      fillOpacity: .6,\n      color: \"black\"\n    };\n\n    this.onEachCounty = (county, layer) => {\n      const countyName = county.properties.NAME;\n      layer.bindPopup(`${countyName}`);\n\n      if (county.properties.COUNTYFP > 34) {\n        layer.options.fillColor = \"green\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(county_ca);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"80vh\",\n          width: '80%',\n          margin: 'auto'\n        },\n        zoom: 6,\n        center: [38, -122],\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countyStyle,\n          data: county_ca.features,\n          onEachFeature: this.onEachCounty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [35.9705041, -120.1211248]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx"],"names":["React","Component","Marker","MapContainer","GeoJSON","TileLayer","Popup","county_ca","L","icon","iconShadow","DefaultIcon","iconUrl","iconSize","prototype","options","MyMap","state","markers","addMarker","e","pop","push","latlng","setState","getColor","n","countyStyle","fillColor","fillOpacity","color","onEachCounty","county","layer","countyName","properties","NAME","bindPopup","COUNTYFP","componentDidMount","console","log","render","height","width","margin","features"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Marker, MapContainer, GeoJSON, TileLayer, Popup} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet'\n//import markers from './../data/markers.json'\n\n// delete L.Icon.Default.prototype._getIconUrl;\n// const marker_icon = new L.Icon({\n//     iconUrl:require('./marker.svg'),\n//     iconSize:[20,20]\n// });\n\nimport icon from './marker.png';\nimport iconShadow from './marker.png';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    iconSize:[12,10]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nclass MyMap extends Component {\n    state = { \n        markers:[[ 35.9705041, -120.1211248]]\n    };\n\n    componentDidMount(){\n        console.log(county_ca);\n    }\n\n    addMarker = (e) => {\n        const { markers } = this.state;\n        markers.pop();\n        markers.push(e.latlng);\n        this.setState({ markers });\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        const countyName = county.properties.NAME;\n        layer.bindPopup(`${countyName}`)\n         \n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"green\"\n        }\n\n\n    };\n\n    render() {\n        return ( \n            <div>\n                <MapContainer style = {{height: \"80vh\", width: '80%', margin: 'auto'}} zoom = {6} center = {[38, -122]} scrollWheelZoom = {false}>\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty}/>\n                    <TileLayer\n                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                     />\n\n                    <Marker position={[ 35.9705041, -120.1211248]}>\n                    </Marker>\n\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default MyMap"]},"metadata":{},"sourceType":"module"}