{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLeaflet } from \"leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"leaflet\";\n\nconst Legend = () => {\n  _s();\n\n  const {\n    map\n  } = useLeaflet();\n  console.log(map);\n  useEffect(() => {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 1000 ? \"#800026\" : d > 500 ? \"#BD0026\" : d > 200 ? \"#E31A1C\" : d > 100 ? \"#FC4E2A\" : d > 50 ? \"#FD8D3C\" : d > 20 ? \"#FEB24C\" : d > 10 ? \"#FED976\" : \"#FFEDA0\";\n    };\n\n    const legend = L.control({\n      position: \"bottomright\"\n    });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10, 20, 50, 100, 200, 500, 1000];\n      let labels = [];\n      let from;\n      let to;\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n        labels.push('<i style=\"background:' + getColor(from + 1) + '\"></i> ' + from + (to ? \"&ndash;\" + to : \"+\"));\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    legend.addTo(map);\n  });\n  return null;\n};\n\n_s(Legend, \"+syOB7ozccyMNsnl2GtxQMWtaB0=\", false, function () {\n  return [useLeaflet];\n});\n\n_c = Legend;\nexport default Legend;\n\nvar _c;\n\n$RefreshReg$(_c, \"Legend\");","map":{"version":3,"sources":["/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/components/Legend.jsx"],"names":["useLeaflet","L","useEffect","Legend","map","console","log","getColor","d","legend","control","position","onAdd","div","DomUtil","create","grades","labels","from","to","i","length","push","innerHTML","join","addTo"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,SAA3B;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAUJ,UAAU,EAA1B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMK,QAAQ,GAAGC,CAAC,IAAI;AACpB,aAAOA,CAAC,GAAG,IAAJ,GACH,SADG,GAEHA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,GAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEAA,CAAC,GAAG,EAAJ,GACA,SADA,GAEA,SAdJ;AAeD,KAhBD;;AAkBA,UAAMC,MAAM,GAAGR,CAAC,CAACS,OAAF,CAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,CAAf;;AAEAF,IAAAA,MAAM,CAACG,KAAP,GAAe,MAAM;AACnB,YAAMC,GAAG,GAAGZ,CAAC,CAACa,OAAF,CAAUC,MAAV,CAAiB,KAAjB,EAAwB,aAAxB,CAAZ;AACA,YAAMC,MAAM,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,IAA/B,CAAf;AACA,UAAIC,MAAM,GAAG,EAAb;AACA,UAAIC,IAAJ;AACA,UAAIC,EAAJ;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtCF,QAAAA,IAAI,GAAGF,MAAM,CAACI,CAAD,CAAb;AACAD,QAAAA,EAAE,GAAGH,MAAM,CAACI,CAAC,GAAG,CAAL,CAAX;AAEAH,QAAAA,MAAM,CAACK,IAAP,CACE,0BACEf,QAAQ,CAACW,IAAI,GAAG,CAAR,CADV,GAEE,SAFF,GAGEA,IAHF,IAIGC,EAAE,GAAG,YAAYA,EAAf,GAAoB,GAJzB,CADF;AAOD;;AAEDN,MAAAA,GAAG,CAACU,SAAJ,GAAgBN,MAAM,CAACO,IAAP,CAAY,MAAZ,CAAhB;AACA,aAAOX,GAAP;AACD,KAtBD;;AAwBAJ,IAAAA,MAAM,CAACgB,KAAP,CAAarB,GAAb;AACD,GA/CQ,CAAT;AAgDA,SAAO,IAAP;AACD,CArDD;;GAAMD,M;UACYH,U;;;KADZG,M;AAuDN,eAAeA,MAAf","sourcesContent":["import { useLeaflet } from \"leaflet\";\nimport L from \"leaflet\";\nimport { useEffect } from \"leaflet\";\n\nconst Legend = () => {\n  const { map } = useLeaflet();\n  console.log(map);\n\n  useEffect(() => {\n    // get color depending on population density value\n    const getColor = d => {\n      return d > 1000\n        ? \"#800026\"\n        : d > 500\n        ? \"#BD0026\"\n        : d > 200\n        ? \"#E31A1C\"\n        : d > 100\n        ? \"#FC4E2A\"\n        : d > 50\n        ? \"#FD8D3C\"\n        : d > 20\n        ? \"#FEB24C\"\n        : d > 10\n        ? \"#FED976\"\n        : \"#FFEDA0\";\n    };\n\n    const legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      const div = L.DomUtil.create(\"div\", \"info legend\");\n      const grades = [0, 10, 20, 50, 100, 200, 500, 1000];\n      let labels = [];\n      let from;\n      let to;\n\n      for (let i = 0; i < grades.length; i++) {\n        from = grades[i];\n        to = grades[i + 1];\n\n        labels.push(\n          '<i style=\"background:' +\n            getColor(from + 1) +\n            '\"></i> ' +\n            from +\n            (to ? \"&ndash;\" + to : \"+\")\n        );\n      }\n\n      div.innerHTML = labels.join(\"<br>\");\n      return div;\n    };\n\n    legend.addTo(map);\n  });\n  return null;\n};\n\nexport default Legend;\n"]},"metadata":{},"sourceType":"module"}