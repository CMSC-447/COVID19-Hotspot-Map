{"ast":null,"code":"var _jsxFileName = \"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx\";\nimport React, { Component } from 'react';\nimport { Marker, MapContainer, GeoJSON, TileLayer } from \"react-leaflet\";\nimport county_ca from './../data/county_ca.json';\nimport markers from './../data/markers.json';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getColor = n => {\n      if (n > 2) {\n        return \"red\";\n      } else {\n        return \"blue\";\n      }\n    };\n\n    this.countyStyle = {\n      fillColor: \"blue\",\n      fillOpacity: .6,\n      color: \"black\"\n    };\n\n    this.onEachCounty = (county, layer) => {\n      const countyName = county.properties.NAME;\n      layer.bindPopup(`${countyName}`);\n\n      if (county.properties.COUNTYFP > 34) {\n        layer.options.fillColor = \"green\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    console.log(county_ca);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"80vh\",\n          width: '80%',\n          margin: 'auto'\n        },\n        zoom: 6,\n        center: [38, -122],\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countyStyle,\n          data: county_ca.features,\n          onEachFeature: this.onEachCounty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), markers.map(({\n          p_name,\n          longitude,\n          latitude,\n          markerOffset\n        }) => /*#__PURE__*/_jsxDEV(Marker, {\n          coordinates: [longitude, latitude],\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            fill: \"none\",\n            stroke: \"#FF5533\",\n            strokeWidth: \"2\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            transform: \"translate(-12, -24)\",\n            children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n              cx: \"12\",\n              cy: \"10\",\n              r: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            textAnchor: \"middle\",\n            y: markerOffset,\n            style: {\n              fontFamily: \"system-ui\",\n              fill: \"#5D5A6D\"\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, p_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx"],"names":["React","Component","Marker","MapContainer","GeoJSON","TileLayer","county_ca","markers","MyMap","state","getColor","n","countyStyle","fillColor","fillOpacity","color","onEachCounty","county","layer","countyName","properties","NAME","bindPopup","COUNTYFP","options","componentDidMount","console","log","render","height","width","margin","features","map","p_name","longitude","latitude","markerOffset","fontFamily","fill","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Marker, MapContainer, GeoJSON, TileLayer} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\nimport markers from './../data/markers.json'\nimport \"leaflet/dist/leaflet.css\";\n\nclass MyMap extends Component {\n    state = { };\n\n    componentDidMount(){\n        console.log(county_ca);\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        const countyName = county.properties.NAME;\n        layer.bindPopup(`${countyName}`)\n         \n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"green\"\n        }\n\n\n    };\n\n    render() {\n        return ( \n            <div>\n                <MapContainer style = {{height: \"80vh\", width: '80%', margin: 'auto'}} zoom = {6} center = {[38, -122]} scrollWheelZoom = {false}>\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty}/>\n                    <TileLayer\n                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                     />\n\n                    {markers.map(({ p_name, longitude, latitude, markerOffset }) => (\n                            <Marker key={p_name} coordinates={[longitude, latitude]}>\n                            <g\n                                fill=\"none\"\n                                stroke=\"#FF5533\"\n                                strokeWidth=\"2\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                transform=\"translate(-12, -24)\"\n                            >\n                                <circle cx=\"12\" cy=\"10\" r=\"3\" />\n                                <path d=\"M12 21.7C17.3 17 20 13 20 10a8 8 0 1 0-16 0c0 3 2.7 6.9 8 11.7z\" />\n                            </g>\n                            <text\n                                textAnchor=\"middle\"\n                                y={markerOffset}\n                                style={{ fontFamily: \"system-ui\", fill: \"#5D5A6D\" }}\n                            >\n                                {name}\n                            </text>\n                            </Marker>\n                        ))}\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default MyMap"]},"metadata":{},"sourceType":"module"}