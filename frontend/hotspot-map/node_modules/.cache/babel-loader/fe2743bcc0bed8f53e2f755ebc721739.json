{"ast":null,"code":"var _jsxFileName = \"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js\";\nimport React from \"react\";\nimport MyMap from \"./components/mymap\";\nimport './App.css'; // making todays date accessible to all the methods\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar displaytodaydate;\nvar cty;\nvar pri;\n\nconst writeJsonFile = require('write-json-file');\n\nclass App extends React.Component {\n  constructor(props) {\n    // initializing \n    super(props);\n\n    this.datetime = () => {\n      var showdate = new Date();\n      var date = showdate.getDate();\n      var month = 1 + showdate.getMonth();\n      var year = showdate.getFullYear();\n\n      if (date < 10) {\n        date = '0' + showdate.getDate();\n      }\n\n      if (month < 10) {\n        month = '0' + month;\n      }\n\n      displaytodaydate = year + '-' + month + '-' + date;\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      console.log(event.target.value);\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const Data = this.state;\n      console.log(\"final data\", Data);\n    };\n\n    this.state = {\n      county: [],\n      prisons: [],\n      selectCounty: 'None',\n      selectPrison: 'None',\n      theDate: ''\n    };\n  } // to find the today's date\n\n\n  async loadDB() {\n    const response = await fetch('/load_counties'); //how it gets backend\n    //const data = await response.json();\n\n    if (response.ok) {\n      console.log(\"Connected to backend API from loadDB().\"); //console.log(data)\n    } else {\n      console.log(\"Could not connect to backend API from loadDB().\");\n    }\n\n    return response.json();\n  }\n\n  async getPrison() {\n    const response = await fetch('/get_prisons');\n    const data = await response.json();\n\n    if (response.ok) {\n      console.log(\"Connected to backend API from getPrison().\");\n    } else {\n      console.log(\"Could not connect to backend API from getPrison().\");\n    }\n\n    return data;\n  }\n\n  async componentDidMount() {\n    cty = this.loadDB();\n    pri = this.getPrison(); //probably need to move this to a new method\n\n    if (!document.getElementById(\"myDate\").value) {\n      document.getElementById(\"myDate\").value = displaytodaydate;\n    } // county drop down.\n\n\n    cty.then(result => {\n      this.setState({\n        county: result,\n        theDate: displaytodaydate\n      });\n    });\n  } // for the drop down menus\n\n\n  selectLACounty(event) {\n    this.setState({\n      selectCounty: event.target.value\n    });\n    var tar = event.target.value;\n    var prisons = [];\n    pri.then(result => {\n      // get the match for the counties.\n      for (var i = 0; i < result.length; i++) {\n        if (result[i].county === tar) {\n          prisons.push(result[i]);\n        }\n      }\n\n      if (event.target.value) {\n        this.setState({\n          prisons: prisons,\n          theDate: displaytodaydate\n        });\n      } else {\n        this.setState({\n          prisons: [],\n          selectPrison: 'None',\n          selectCounty: 'None'\n        });\n      }\n    });\n  }\n\n  selectLAPrison(event) {\n    // if a value is set for prison\n    if (event.target.value) {\n      this.setState({\n        selectPrison: event.target.value\n      });\n    } // if the user goes back to having no value for prison\n    else {\n        this.setState({\n          selectPrison: 'None'\n        });\n      }\n\n    console.log(event.target.value);\n  } // for the date\n\n\n  render() {\n    const {\n      theDate\n    } = this.state;\n    const {\n      selectPrison\n    } = this.state;\n    const {\n      selectCounty\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              textAlign: \"Center\"\n            },\n            children: \" Covid-19 Hotspot Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"auto\",\n              width: \"80%\",\n              display: \"block\",\n              overflow: \"auto\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                style: {\n                  marginRight: \"50px\",\n                  marginBottom: \"25px\",\n                  paddingLeft: \"10px\",\n                  height: \"30px\",\n                  width: \"200px\",\n                  border: \"2px black solid\",\n                  backgroundColor: \"#393F44\",\n                  color: \"#D8D9DA\"\n                },\n                value: this.state.selectCounty,\n                onChange: this.selectLACounty.bind(this),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  defaultValue: true,\n                  children: \"SELECT COUNTY\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 13\n                }, this), this.state.county.map(x => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: x.c_name\n                  }, x.c_name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 22\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: this.selectLAPrison.bind(this),\n                value: this.state.selectPrison,\n                style: {\n                  marginBottom: \"25px\",\n                  marginRight: \"50px\",\n                  paddingLeft: \"10px\",\n                  height: \"30px\",\n                  width: \"200px\",\n                  border: \"2px black solid\",\n                  backgroundColor: \"#393F44\",\n                  color: \"#D8D9DA\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  defaultValue: true,\n                  children: \"SELECT PRISON\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 13\n                }, this), this.state.prisons.map(x => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: x.p_name\n                  }, x.p_name, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 24\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"left\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"myDate\",\n                type: \"date\",\n                name: \"theDate\",\n                onChange: this.handleInputChange,\n                style: {\n                  marginBottom: \"25px\",\n                  marginRight: \"50px\",\n                  height: \"30px\",\n                  width: \"170px\",\n                  border: \"2px black solid\",\n                  backgroundColor: \"#393F44\",\n                  color: \"#D8D9DA\",\n                  paddingLeft: \"10px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  marginBottom: \"25px\",\n                  height: \"30px\",\n                  width: \"100px\",\n                  marginRight: \"50px\",\n                  border: \"2px black solid\",\n                  backgroundColor: \"#393F44\",\n                  color: \"#D8D9DA\",\n                  paddingLeft: \"10px\"\n                },\n                children: \"SUBMIT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this), this.datetime(), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You Chose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"County: \", selectCounty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Prison: \", selectPrison]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", theDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(MyMap, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js"],"names":["React","MyMap","displaytodaydate","cty","pri","writeJsonFile","require","App","Component","constructor","props","datetime","showdate","Date","date","getDate","month","getMonth","year","getFullYear","handleInputChange","event","preventDefault","console","log","target","value","setState","name","handleSubmit","Data","state","county","prisons","selectCounty","selectPrison","theDate","loadDB","response","fetch","ok","json","getPrison","data","componentDidMount","document","getElementById","then","result","selectLACounty","tar","i","length","push","selectLAPrison","render","textAlign","margin","width","display","overflow","float","marginRight","marginBottom","paddingLeft","height","border","backgroundColor","color","bind","map","x","c_name","p_name"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport MyMap from \"./components/mymap\";\nimport './App.css'\n\n// making todays date accessible to all the methods\nvar displaytodaydate;\nvar cty;\nvar pri;\nconst writeJsonFile = require('write-json-file');\n\nclass App extends React.Component {\n  \n  constructor(props){\n    \n    // initializing \n    super(props);\n    this.state = {\n      county: [],\n      prisons: [],\n      selectCounty:'None',\n      selectPrison:'None',\n      theDate: '',\n    };\n\n  }\n\n  // to find the today's date\n  datetime = () =>{\n\n    var showdate=new Date();\n    var date = showdate.getDate();\n    var month = 1 + showdate.getMonth();\n    var year = showdate.getFullYear();\n    \n\n    if(date < 10 ){\n      date = '0'+showdate.getDate();\n    }\n    if(month < 10){\n      \n      month = '0'+(month);\n    }\n    displaytodaydate = year + '-' + (month) + '-' + date;\n    \n    return(\n      <div></div>\n    )\n\n  }\n  async loadDB() {\n    const response = await fetch('/load_counties');   //how it gets backend\n    //const data = await response.json();\n    if (response.ok){\n      \n      console.log(\"Connected to backend API from loadDB().\");\n      //console.log(data)\n    }\n    else {\n      console.log(\"Could not connect to backend API from loadDB().\");\n    }\n    return response.json();\n  }\n\n  async getPrison() {\n    const response = await fetch('/get_prisons');\n    const data = await response.json();\n\n    if (response.ok){\n      console.log(\"Connected to backend API from getPrison().\");\n    }\n    else {\n      console.log(\"Could not connect to backend API from getPrison().\");\n    }\n\n\n    return data;\n  }\n\n\n  async componentDidMount() {\n    cty = this.loadDB();\n    pri = this.getPrison();\n    \n\n\n    //probably need to move this to a new method\n    if(!document.getElementById(\"myDate\").value){\n      document.getElementById(\"myDate\").value = displaytodaydate;\n    }\n    \n    // county drop down.\n    cty.then( result => {\n      this.setState({ county:result,theDate: displaytodaydate});\n    });\n    \n  }\n\n  // for the drop down menus\n  selectLACounty(event){\n    \n    this.setState({ selectCounty: event.target.value});\n\n    var tar = event.target.value;\n    var prisons = [];\n\n    pri.then( result => {\n\n      // get the match for the counties.\n      for (var i = 0; i < result.length; i++) {\n        if (result[i].county === tar) {\n          prisons.push(result[i])\n        }\n      }\n\n      if(event.target.value) {\n        this.setState({ prisons:prisons,theDate: displaytodaydate});\n      }\n      else{\n        this.setState({ \n          prisons: [],\n          selectPrison: 'None',\n          selectCounty: 'None'\n      });\n      }\n\n    });\n\n  }\n\n\n  selectLAPrison(event){\n    \n    // if a value is set for prison\n    if(event.target.value){\n      this.setState({\n        selectPrison: event.target.value\n      });\n    }\n    // if the user goes back to having no value for prison\n    else{\n      this.setState({ \n        selectPrison: 'None',\n    });\n    }\n    console.log(event.target.value)\n  }\n\n  // for the date\n  handleInputChange = (event) =>{\n    event.preventDefault()\n    console.log(event.target.value)\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  // data collected for the whole form\n  handleSubmit=(event) =>{\n    event.preventDefault()\n    const Data = this.state\n    console.log(\"final data\", Data)\n\n  } \n \n  render() {  \n    const {theDate} = this.state \n    const {selectPrison} = this.state  \n    const {selectCounty} = this.state\n    return (\n\n      <div>   \n     \n      <div>\n        <div > <h1 \n        style = {{textAlign: \"Center\"}}> Covid-19 Hotspot Map</h1></div>\n     \n      \n      <form onSubmit={this.handleSubmit}>\n        <div style={{margin:\"auto\", width:\"80%\", display:\"block\", overflow:\"auto\"}}>\n        \n        \n        <div style={{float:\"left\" }}>\n\n          <select  style={{marginRight:\"50px\", marginBottom:\"25px\", paddingLeft:\"10px\", height:\"30px\", width:\"200px\", border:\"2px black solid\", backgroundColor:\"#393F44\", color:\"#D8D9DA\"}} value={this.state.selectCounty} onChange={this.selectLACounty.bind(this)}>\n           \n            <option value=\"\"  defaultValue >SELECT COUNTY</option>\n            {this.state.county.map(x => {\n              return <option key={x.c_name}>{x.c_name}</option>\n            })}\n\n          </select>\n\n          <select onChange={this.selectLAPrison.bind(this)} value={this.state.selectPrison} style={{marginBottom:\"25px\", marginRight:\"50px\", paddingLeft:\"10px\", height:\"30px\", width:\"200px\", border:\"2px black solid\", backgroundColor:\"#393F44\", color:\"#D8D9DA\"}}>\n           \n            <option value=\"\" defaultValue>SELECT PRISON</option>\n            {\n              this.state.prisons.map(x => { \n                return <option  key={x.p_name}>{x.p_name}</option>     \n              })\n            }\n          \n          </select>\n\n        </div>\n        \n        <div style={{float:\"left\" }}>\n\n          <input id=\"myDate\" type=\"date\" name=\"theDate\" onChange= {this.handleInputChange} style={{ marginBottom:\"25px\", marginRight:\"50px\", height:\"30px\", width:\"170px\", border:\"2px black solid\", backgroundColor:\"#393F44\", color:\"#D8D9DA\", paddingLeft:\"10px\"}}></input>\n      \n          <button style={{ marginBottom:\"25px\", height:\"30px\", width:\"100px\",  marginRight:\"50px\", border:\"2px black solid\", backgroundColor:\"#393F44\", color:\"#D8D9DA\", paddingLeft:\"10px\"}}>SUBMIT</button>\n\n        </div>\n        </div>\n\n        </form>\n       \n\n            {this.datetime()}\n        \n            <p>You Chose</p>\n            <p>County: {selectCounty}</p>\n            <p>Prison: {selectPrison}</p>\n            <p>Date: {theDate}</p>\n        </div>\n\n        <div>\n    \n          <MyMap />\n      </div>\n\n      </div>    \n\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}