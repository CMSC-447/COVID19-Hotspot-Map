{"ast":null,"code":"var _jsxFileName = \"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx\";\nimport React, { Component } from 'react';\nimport { Marker, MapContainer, GeoJSON, TileLayer, Popup } from \"react-leaflet\";\nimport county_ca from './../data/county_ca.json';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport markers from './../data/markers.json';\nimport icon from './marker.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  iconSize: [20, 20],\n  iconAnchor: [17, 20]\n});\nvar prison = [];\nL.Marker.prototype.options.icon = DefaultIcon;\n\nclass MyMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getColor = n => {\n      if (n > 2) {\n        return \"red\";\n      } else {\n        return \"blue\";\n      }\n    };\n\n    this.countyStyle = {\n      fillColor: \"blue\",\n      fillOpacity: .6,\n      color: \"black\",\n      weight: .8\n    };\n\n    this.onEachCounty = (county, layer) => {\n      const countyName = county.properties.NAME;\n      layer.bindPopup(`${countyName}`);\n\n      if (county.properties.COUNTYFP > 34) {\n        layer.options.fillColor = \"green\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    for (var i = 0; i < markers.length; i++) {}\n\n    console.log(markers);\n    console.log(county_ca);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        style: {\n          height: \"80vh\",\n          width: '80%',\n          margin: 'auto'\n        },\n        zoom: 6,\n        center: [38, -122],\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(GeoJSON, {\n          style: this.countyStyle,\n          data: county_ca.features,\n          onEachFeature: this.onEachCounty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: [35.9705041, -120.1211248]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx"],"names":["React","Component","Marker","MapContainer","GeoJSON","TileLayer","Popup","county_ca","L","markers","icon","DefaultIcon","iconUrl","iconSize","iconAnchor","prison","prototype","options","MyMap","state","getColor","n","countyStyle","fillColor","fillOpacity","color","weight","onEachCounty","county","layer","countyName","properties","NAME","bindPopup","COUNTYFP","componentDidMount","i","length","console","log","render","height","width","margin","features"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Marker, MapContainer, GeoJSON, TileLayer, Popup} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet'\nimport markers from './../data/markers.json'\nimport icon from './marker.png';\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    iconSize:[20,20],\n    iconAnchor:[17,20]\n});\n\nvar prison = [];\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nclass MyMap extends Component {\n    state = {\n\n    };\n\n    componentDidMount() {\n\n        for (var i = 0; i < markers.length; i++) {\n\n        }\n        console.log(markers)\n        console.log(county_ca);\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n        weight:.8,\n        \n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        const countyName = county.properties.NAME;\n        layer.bindPopup(`${countyName}`)\n         \n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"green\"\n        }\n\n\n    };\n\n    render() {\n        return ( \n            <div>\n                <MapContainer style = {{height: \"80vh\", width: '80%', margin: 'auto'}} zoom = {6} center = {[38, -122]} scrollWheelZoom = {false}>\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty}/>\n                    <TileLayer\n                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                     />\n\n                    <Marker position={[ 35.9705041, -120.1211248]}>\n                    </Marker>\n\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default MyMap"]},"metadata":{},"sourceType":"module"}