[{"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/index.js":"1","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/App.js":"2","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/reportWebVitals.js":"3","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/components/mymap.jsx":"4","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/index.js":"5","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js":"6","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/reportWebVitals.js":"7","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx":"8"},{"size":500,"mtime":1618178507470,"results":"9","hashOfConfig":"10"},{"size":256,"mtime":1618199589078,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1618178507471,"results":"12","hashOfConfig":"10"},{"size":1468,"mtime":1618199589078,"results":"13","hashOfConfig":"10"},{"size":500,"mtime":1618178507470,"results":"14","hashOfConfig":"15"},{"size":654,"mtime":1618384911787,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1618178507471,"results":"17","hashOfConfig":"15"},{"size":1468,"mtime":1618199589078,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"s5d96o",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1lr2tqf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"30"},"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/index.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/App.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/reportWebVitals.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/components/mymap.jsx",["38"],"import React, { Component } from 'react';\nimport {MapContainer, GeoJSON, TileLayer, Marker} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\nimport \"leaflet/dist/leaflet.css\";\n\n\n\nclass MyMap extends Component {\n    state = { };\n\n    componentDidMount(){\n        console.log(county_ca);\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        const countyName = county.properties.NAME;\n        layer.bindPopup(`${countyName}`)\n         \n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"green\"\n        }\n\n\n    };\n\n    render() {\n        return ( \n            <div>\n                <MapContainer style = {{height: \"80vh\", width: '80%', margin: 'auto'}} zoom = {6.5} center = {[38, -122]} scrollWheelZoom = \"false\">\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty}/>\n                    <TileLayer\n                     attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                     />\n                </MapContainer>\n            </div>\n        );\n    }\n}\n\nexport default MyMap","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/index.js",[],["39","40"],"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js",["41"],"import React from \"react\";\nimport MyMap from \"./components/mymap\";\nimport './App.css'\n\n\nclass App extends React.Component {\n\n  async loadDB() {\n    const response = await fetch('/hello');   //how it gets backend\n    if (response.ok){\n      const responseText = await response.text();\n      console.log(\"Connected to backend API.\");\n    }\n    else {\n      console.log(\"Could not connect to backend API.\");\n    }\n  }\n\n  async componentDidMount() {\n    this.loadDB();\n  }\n  \n  render() {\n    return (\n      <div>\n          <h1 style = {{textAlign: \"Center\"}}> Covid-19 Hotspot Map</h1>\n            <MyMap />\n      </div>\n\n    );\n  };\n}\n\nexport default App;\n","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/reportWebVitals.js",[],"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx",["42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":43,"nodeType":"45","messageId":"46","endLine":2,"endColumn":49},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"43","severity":1,"message":"51","line":11,"column":13,"nodeType":"45","messageId":"46","endLine":11,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":2,"column":43,"nodeType":"45","messageId":"46","endLine":2,"endColumn":49},"no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'responseText' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]