[{"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/index.js":"1","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/App.js":"2","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/reportWebVitals.js":"3","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/components/mymap.jsx":"4","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/index.js":"5","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js":"6","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/reportWebVitals.js":"7","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx":"8","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/router.js":"9","/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/vaccine.js":"10"},{"size":600,"mtime":1620699496675,"results":"11","hashOfConfig":"12"},{"size":9372,"mtime":1620875592162,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1618178507471,"results":"14","hashOfConfig":"12"},{"size":6939,"mtime":1620711737986,"results":"15","hashOfConfig":"12"},{"size":500,"mtime":1618178507470,"results":"16","hashOfConfig":"17"},{"size":6514,"mtime":1620320646603,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1618178507471,"results":"19","hashOfConfig":"17"},{"size":3135,"mtime":1620286826228,"results":"20","hashOfConfig":"17"},{"size":376,"mtime":1620699496676,"results":"21","hashOfConfig":"12"},{"size":2157,"mtime":1620709057107,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"s5d96o",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1lr2tqf",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/index.js",[],["46","47"],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/App.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/reportWebVitals.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/components/mymap.jsx",["48","49"],"import React, { Component } from 'react';\nimport {Marker, MapContainer, GeoJSON, TileLayer, Tooltip} from \"react-leaflet\"\nimport county_ca from './../data/county_ca.json'\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet'\nimport data from './../data/markers.json'\nimport prison_data from './../data/total_pri_data.json'\nimport county_data from './../data/total_county_data.json'\nimport icon from './blue-pin.png';\n\n\nlet DefaultIcon = L.icon({\n    iconUrl: icon,\n    iconSize:[20,20],\n    iconAnchor:[5,10],\n    popupAnchor:[5,5]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nvar datainfo = [];\n\n\nclass MyMap extends Component {\n    constructor () {\n        super();\n        this.state = {\n            locations:[],\n            hovered:false,\n            check:false,   \n\n        };\n    }\n\n    componentDidMount() {\n\n        window.onbeforeunload = function () {\n            window.scrollTo(0, 0);\n          }\n        // arrange data for marking and popups\n        datainfo = [];\n        for (var i = 0; i < data.length; i++) {\n            this.state.locations.push({\"name\":data[i].p_name, \"position\": [data[i].latitude, data[i].longitude], \n            \"city\":data[i].city, \"county\":data[i].county});\n            datainfo.push({\"name\":data[i].p_name, \"position\": [data[i].latitude, data[i].longitude], \n            \"city\":data[i].city, \"county\":data[i].county});\n\n            \n        }\n\n\n    }\n\n    getColor = (n) => {\n        if(n > 2){\n            return \"red\";\n        }\n        else{\n            return \"blue\";\n        }\n    \n    };\n\n    countyStyle = {\n        fillColor: \"blue\",\n        fillOpacity: .6,\n        color: \"black\",\n        weight:0.6,\n    };\n\n   \n    onEachCounty = (county, layer) =>{\n        \n        \n        const countyName = county.properties.NAME;\n\n        \n        layer.bindTooltip(`${countyName}`); // county name display.\n\n   \n        layer.on('click', function (e) {\n            document.getElementById(\"info\").style.visibility = \"visible\";\n            document.getElementById(\"info\").innerHTML = `<h2 style='text-align:center'>${countyName}</h2><strong style='padding-left:15px'>Prisons:</strong><br>`;\n\n            // document.getElementById(\"info\").innerHTML = \"Prisons: \" + \"<br>\" ;\n\n            var exist = false;\n            var i =0;\n            for( i= 0; i < datainfo.length; i++ ){\n                if(datainfo[i].county === `${countyName}`){\n                    exist = true;\n                }\n\n            }            \n\n            if(exist){\n                \n                for(var j = 0; j < datainfo.length; j++ ){\n                    if(datainfo[j].county === `${countyName}`){\n                        document.getElementById(\"info\").innerHTML += \"<li style='padding-left:25px'>\" + datainfo[j].name + \"  (City: \" + datainfo[j].city + \")</li>\" ;\n                    }\n                }\n            }\n           \n                    \n            else{\n                document.getElementById(\"info\").innerHTML += \"<span style='padding-left:25px'>No prisons to show<span>\" ;\n            }\n\n            var elmnt = document.getElementById(\"info\");\n            elmnt.scrollIntoView({behavior: \"smooth\"});\n        \n\n          });\n\n\n        if(county.properties.COUNTYFP > 34){\n            layer.options.fillColor = \"yellow\"\n        }\n    };\n\n\n    handlecheck = (event) =>{\n       \n        if(document.getElementById('chkbx').checked){\n            this.setState({\n\n                selected: !this.state.selected,\n                check:1\n            })\n        }\n        else if(!document.getElementById('chkbx').checked){\n            this.setState({\n                check:0\n            })\n        }\n    }\n\n\n    prisonPrint = (e) =>{\n\n\n        \n        document.getElementById(\"info\").style.visibility = \"visible\";\n        document.getElementById(\"info\").innerHTML = \"<h2 style='text-align:center'>\" + e.target.options.children.props.children[1] + \"<h2>\" \n        var index = 0;\n        for(var i =0; i< datainfo.length; i++){\n            if(datainfo[i].name === e.target.options.children.props.children[1]){\n                index = i;\n\n            }\n        }\n        document.getElementById(\"info\").innerHTML += \"<strong style='padding-Left: 10px'>County: </strong>\" + datainfo[index].county  + \"<br> <strong style='padding-Left: 10px'>City:</strong>\" + datainfo[index].city;\n\n        var elmnt = document.getElementById(\"info\");\n        elmnt.scrollIntoView({behavior: \"smooth\"});\n    }\n\n  \n    render() {\n        const {check} = this.state; \n       \n        return ( \n            \n            <div>\n\n                <div style = {{  width: '70%', margin:\"auto\" , display:\"block\", overflow:\"auto\"}}>\n                    \n                <input id=\"chkbx\" onChange={this.handlecheck.bind(this)} type=\"checkbox\" style={{float:\"right\"}}/> <label style={{float:\"right\", fontSize:\"14px\"}}>Show Tile Layer</label>\n                </div>\n                <MapContainer \n                \n                style = {{border:\"2px solid #393F44\", height: \"72vh\", width: '70%', margin: 'auto'}} zoom = {6} center = {[37.5, -120]} scrollWheelZoom = {true}>\n                    <GeoJSON style = {this.countyStyle} data ={county_ca.features} onEachFeature={this.onEachCounty} \n                    onMouseMove={this.handleMove} onMouseLeave={this.handleLeave} />\n                 \n                 \n                 \n                    {check ? (<TileLayer style={{visibility:\"hidden\"}}\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png\"\n                    />):(\"\")}\n\n\n                    {this.state.locations.map((location,idx) => \n\n\n                        // marker and detailed display.\n                        <Marker \n                        eventHandlers={{\n                            click: (e) => {\n                              this.prisonPrint(e)\n                            \n                            },\n                          }}\n                        key={`marker-${idx}`} position={location.position}>\n\n                            <Tooltip>\n                                <span>\n                                    Prison: &nbsp;\n                                </span>\n                                {location.name}\n                                <span><br />\n                                    County: &nbsp;\n                                </span>\n                                {location.county}\n                                <span><br />\n                                    City: &nbsp;\n                                </span>\n                                {location.city}\n                                </Tooltip>\n                        </Marker>\n                    )}\n\n                </MapContainer>\n\n                \n                \n            </div>\n        );\n    }\n}\n\nexport default MyMap\n","/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/index.js",[],["50","51"],"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/App.js",["52"],"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/reportWebVitals.js",[],"/Users/mahmood/Desktop/PROJECT/frontend/hotspot-map/src/components/mymap.jsx",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/router.js",[],"/Users/mahmood/Desktop/COVID19-Hotspot-Map/frontend/hotspot-map/src/vaccine.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":7,"column":8,"nodeType":"59","messageId":"60","endLine":7,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":8,"column":8,"nodeType":"59","messageId":"60","endLine":8,"endColumn":19},{"ruleId":"53","replacedBy":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":125,"column":7,"nodeType":"66","endLine":125,"endColumn":17},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'prison_data' is defined but never used.","Identifier","unusedVar","'county_data' is defined but never used.",["67"],["68"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]